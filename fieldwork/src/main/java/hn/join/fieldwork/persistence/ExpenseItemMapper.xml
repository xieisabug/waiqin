<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hn.join.fieldwork.persistence.ExpenseItemMapper">

	<resultMap type="hn.join.fieldwork.domain.ExpenseItem" id="expenseItemMap">
		<id column="item_id" property="id"  jdbcType="INTEGER" />
		<result column="item_name" property="name" jdbcType="VARCHAR" /> 
	</resultMap>
	
	<insert id="insertExpenseItem" parameterType="hn.join.fieldwork.domain.ExpenseItem">
		insert into tbl_expense_item(item_id,item_name,create_time)
	values(#{id,jdbcType=INTEGER},#{name,jdbcType=VARCHAR},now())
	</insert>
	
	<delete id="deleteExpenseItem" parameterType="java.lang.Integer">
		delete from tbl_expense_item where item_id=#{itemId,jdbcType=INTEGER}
	</delete>
	
	<select id="countBy" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(item_id) from tbl_expense_item
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
				<if test="@hn.join.fieldwork.utils.Ognl@isNotEmpty(itemName)">
					item_name like #{itemName}
				</if>
		</trim>
	</select>
	
	
	<select id="findBy"  resultMap="expenseItemMap">
		select item_id,item_name from tbl_expense_item
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
				<if test="@hn.join.fieldwork.utils.Ognl@isNotEmpty(itemName)">
					item_name like #{itemName}
				</if>
			</trim>
		order by item_id ASC
		<if test="limit !=null">
				LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>
	
	<select id="findAll" resultMap="expenseItemMap">
		select item_id,item_name from tbl_expense_item
	</select>

</mapper>