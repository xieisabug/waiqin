<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hn.join.fieldwork.persistence.FieldWorkerMapper">

	<resultMap type="hn.join.fieldwork.domain.FieldWorker" id="fieldWorkerMap">
		<id column="field_worker_id" property="id" jdbcType="BIGINT" />
		<result column="fullname" property="fullname" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="worker_no" property="workerNo" jdbcType="VARCHAR" />
		<result column="department_id" property="departmentId" jdbcType="INTEGER"/>
		<result column="my_device_id" property="deviceId" jdbcType="INTEGER"/>
		<!-- <association property="department" column="department_id"
			select="hn.join.fieldwork.persistence.DepartmentMapper.getById" />
		<association property="device" column="my_device_id"
			select="hn.join.fieldwork.persistence.DeviceMapper.getById" /> -->
		<association property="department" resultMap="hn.join.fieldwork.persistence.DepartmentMapper.departmentMap" />
		<association property="device" 	resultMap="hn.join.fieldwork.persistence.DeviceMapper.deviceMap"/>	
			
	</resultMap>


	<sql id="base_column_list">
		tbl_fieldworker.field_worker_id,tbl_fieldworker.fullname,tbl_fieldworker.password,tbl_fieldworker.worker_no,tbl_fieldworker.department_id,tbl_fieldworker.my_device_id
	</sql>



	<select id="getById" resultMap="fieldWorkerMap" parameterType="java.lang.Long">
		select
		<include refid="base_column_list" />
		from tbl_fieldworker where
		tbl_fieldworker.field_worker_id=#{fieldWorkerId}
	</select>

	<select id="loadAllFieldWorkerId" resultType="java.lang.Long">
		select
		field_worker_id from from tbl_fieldworker
	</select>



	<insert id="insertFieldWorker">
		INSERT INTO tbl_fieldworker
		(field_worker_id,fullname,worker_no,department_id)
		VALUES
		(#{fieldWorker.id,jdbcType=BIGINT},#{fieldWorker.fullname,jdbcType=VARCHAR},#{fieldWorker.workerNo,jdbcType=VARCHAR},#{fieldWorker.departmentId,jdbcType=INTEGER})
	</insert>
	
	<update id="updateFieldWorker">
		UPDATE tbl_fieldworker
			SET fullname=#{fieldWorker.fullname,jdbcType=VARCHAR},
			worker_no=#{fieldWorker.workerNo,jdbcType=VARCHAR},
			department_id=#{fieldWorker.departmentId,jdbcType=INTEGER}
		WHERE field_worker_id=#{fieldWorker.id,jdbcType=BIGINT}
	</update>
	
	<delete id="deleteFieldWorkerById">
		delete from tbl_fieldworker where field_worker_id=#{fieldWorkerId}
	</delete>


	<select id="findByFieldWorkerLoginCommand" resultMap="fieldWorkerMap"
		parameterType="hn.join.fieldwork.web.command.FieldWorkerLoginCommand">
		SELECT 
			tbl_fieldworker.field_worker_id,tbl_fieldworker.fullname,tbl_fieldworker.password,tbl_fieldworker.worker_no,tbl_fieldworker.department_id,tbl_fieldworker.my_device_id,
			tbl_department.department_code,tbl_department.department_name,tbl_department.city,
			tbl_device.device_id,tbl_device.phone_no,tbl_device.meid,tbl_device.model,tbl_device.current_amount,tbl_device.consume_category,tbl_device.status,tbl_device.create_time,tbl_device.visible_status
		FROM 
			tbl_fieldworker INNER JOIN tbl_department ON tbl_fieldworker.department_id=tbl_department.department_id INNER JOIN tbl_device ON tbl_fieldworker.my_device_id=tbl_device.device_id
		WHERE
			tbl_device.phone_no=#{phoneNo} and tbl_device.meid=#{meid} AND	tbl_device.status='ACTIVE'
	</select>


	<select id="countBy" resultType="java.lang.Long">
		select count(field_worker_id) from tbl_fieldworker left join tbl_department on tbl_fieldworker.department_id=tbl_department.department_id left join tbl_device on tbl_fieldworker.my_device_id=tbl_device.device_id
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="@hn.join.fieldwork.utils.Ognl@isNotEmpty(fullname)">
				tbl_fieldworker.fullname like concat('%',#{fullname},'%')
			</if>
			<if test="@hn.join.fieldwork.utils.Ognl@isNotEmpty(mobileNo)">
				AND tbl_device.phone_no like concat('%',#{mobileNo},'%')
			</if>
			<if test="@hn.join.fieldwork.utils.Ognl@isNotEmpty(city)">
				AND tbl_department.city = #{city}
			</if>
		</trim>
	</select>

	<select id="findBy" resultMap="fieldWorkerMap">
		select
			tbl_fieldworker.field_worker_id,tbl_fieldworker.fullname,tbl_fieldworker.password,tbl_fieldworker.worker_no,tbl_fieldworker.department_id,tbl_fieldworker.my_device_id,
			tbl_department.department_code,tbl_department.department_name,tbl_department.city,
			tbl_device.device_id,tbl_device.phone_no,tbl_device.meid,tbl_device.model,tbl_device.current_amount,tbl_device.consume_category,tbl_device.status,tbl_device.create_time,tbl_device.visible_status
		from tbl_fieldworker left join tbl_department on tbl_fieldworker.department_id=tbl_department.department_id left join tbl_device on tbl_fieldworker.my_device_id=tbl_device.device_id
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="@hn.join.fieldwork.utils.Ognl@isNotEmpty(fullname)">
				tbl_fieldworker.fullname like concat('%',#{fullname},'%')
			</if>
			<if test="@hn.join.fieldwork.utils.Ognl@isNotEmpty(mobileNo)">
				AND tbl_device.phone_no like concat('%',#{mobileNo},'%')
			</if>
			<if test="@hn.join.fieldwork.utils.Ognl@isNotEmpty(city)">
				AND tbl_department.city = #{city}
			</if>
		</trim>
		order by tbl_fieldworker.field_worker_id ASC
		<if test="limit !=null">
			LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>

	<update id="updatePassword">
		update tbl_fieldworker
		set password=#{password}
		where
		field_worker_id=#{fieldWorkerId}
	</update>
	
	<update id="attacheDevice">
		update tbl_fieldworker
		set my_device_id=#{deviceId}
		where
		field_worker_id=#{fieldWorkerId}
	</update>
	
	<update id="unattachDevice">
		update tbl_fieldworker
		set my_device_id=null
		where
		field_worker_id=#{fieldWorkerId}
	</update>

	<select id="findFieldWorkerIdByAreaCode" parameterType="java.lang.String" resultType="java.lang.Long">
		select distinct(field_worker_id) from tbl_fieldworker inner join tbl_department on tbl_fieldworker.department_id=tbl_department.department_id
	where tbl_department.city=#{areaCode}
	</select>

	<select id="findOutTimeFieldWorkers" parameterType="java.util.List" resultMap="fieldWorkerMap">
		select tbl_fieldworker.field_worker_id,tbl_fieldworker.fullname,tbl_fieldworker.worker_no,tbl_fieldworker.department_id,tbl_fieldworker.my_device_id,tbl_device.device_id,tbl_device.phone_no,tbl_device.status from tbl_fieldworker
	left join tbl_device on tbl_fieldworker.my_device_id=tbl_device.device_id 
	<if test="@hn.join.fieldwork.utils.Ognl@isNotEmpty(list)">
	where tbl_fieldworker.field_worker_id not in
		<foreach collection="list" item="item" index="index" open="(" separator="," close=")">
			#{item}
		</foreach>
	</if>
	</select>
	
	<select id="getFieldWorkerWithDeviceById" parameterType="java.lang.Long" resultMap="fieldWorkerMap">
		select tbl_fieldworker.field_worker_id,tbl_fieldworker.fullname,tbl_fieldworker.worker_no,tbl_fieldworker.department_id,tbl_fieldworker.my_device_id,tbl_device.device_id,tbl_device.phone_no,tbl_device.status from tbl_fieldworker
	left join tbl_device on tbl_fieldworker.my_device_id=tbl_device.device_id where tbl_fieldworker.field_worker_id=#{fieldWorkerId}
	</select>




</mapper>